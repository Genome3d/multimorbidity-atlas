#!/usr/bin/env Rscript

#Convex Biclustering of phenotypes according to shared eGenes or eQTLs
#setwd("Z:/tfad334/multimorbidity-atlas/scripts/R")
suppressPackageStartupMessages(
  for (package in c('gplots', 'cvxbiclustr')) {
    if (!require(package, character.only=T, quietly=T, warn.conflicts=F)) {
      install.packages(package, repos="http://cran.us.r-project.org")
      library(package, character.only=T)
    }
  }
)


#Make matrix
cat('Reading eGene matrix...\n')
pb <- txtProgressBar(min=0, max=100, style=3)
mdata <- read.delim("../../results/egene_matrix.txt", header = T)
mdata = subset(mdata, mdata$Genes1 > 3 & mdata$Genes2 > 3 & mdata$Common_eGenes > 3)
xtraits <- sort(unique(mdata$Trait1))
ytraits <- sort(unique(mdata$Trait2))
setTxtProgressBar(pb,100)
close(pb)
trait.matrix <- matrix(, nrow = length(ytraits), ncol = length(ytraits), dimnames = list(ytraits, ytraits))

cat('Creating matrix...')
for (i in rownames(trait.matrix)){
  for (j in colnames(trait.matrix)){
    i.index <- which(mdata$Trait1 == i)
    for (x in i.index){
      if (mdata[x,2] == j){
        trait.matrix[i,j] <- mdata[x,6]
      }
      
    }
  }
}
trait.matrix <- replace(trait.matrix, is.na(trait.matrix), 0)


if (!require("RColorBrewer")) {
install.packages("RColorBrewer")
library(RColorBrewer)
}


#Annotation for heatmap
types <- colnames(trait.matrix)
ty <- as.numeric(factor(types))
cols <- colorRampPalette(brewer.pal(12, "Paired"))(625)
YlGnBu5 <- c('#ffffd9','#c7e9b4','#41b6c4','#225ea8','#081d58')
hmcols <- colorRampPalette(YlGnBu5)(100)

# Construct weights and edge-incidence matrices
wts <- gkn_weights(trait.matrix) # combines Gaussian kernel weights with k-nearest neighbor weights
w_row <- wts$w_row  # Vector of weights for row graph
w_col <- wts$w_col  # Vector of weights for column graph
E_row <- wts$E_row  # Edge-incidence matrix for row graph
E_col <- wts$E_col  # Edge-incidence matrix for column graph

# Initialize solution path gamma parameters 
gammaSeq <- 10^seq(0, 3, length.out = 100)


#Perform validation to select regularization parameter 
solution <- cobra_validate(trait.matrix,E_row,E_col,w_row,w_col,gammaSeq,fraction=0.01)


# Plot validation error
verr <- solution$validation_error
plot(verr)


## Heatmap of data smoothed at the model selected to minimize validation error
ix <- which.min(verr)
groups_row <- solution$groups_row[[ix]]
groups_col <- solution$groups_col[[ix]]

M <- biclust_smooth(trait.matrix,groups_row,groups_col)

png("egenes_bicluster.png", width=10000, height=10000, units="px", pointsize=24)
heatmap.2(M,col=hmcols,labRow = rownames(trait.matrix), labCol = colnames(trait.matrix),ColSideCol=cols[ty],margins=c(40,30),
          main = "Smooth Convex Biclustering of Phenotypes according to shared eGenes", trace="none",
          keysize = 0.2, density.info = "none", key.xlab = "Proportion of shared eGenes",# key.par = list(mar=c(3,3,3,3)),
          lmat=rbind(c(0,4), c(0, 1), c(3,2), c(0,5)), lwid=c(0.1,1), lhei=c(0.1,0.01,1,0.05))
dev.off()


# png("snps_smoooth.png", width=10000, height=10000, units="px", pointsize=24)
# heatmap.2(M,col=hmcols,labRow = rownames(trait.matrix), labCol = colnames(trait.matrix),ColSideCol=cols[ty],margins=c(40,30),
#           main = "Smooth Convex Biclustering of Phenotypes according to shared SNPs", trace="none",
#           keysize = 0.2, density.info = "none", key.xlab = "Proportion of shared SNPs",# key.par = list(mar=c(3,3,3,3)),
#           lmat=rbind(c(0,4), c(0, 1), c(3,2), c(0,5)), lwid=c(0.1,1), lhei=c(0.1,0.01,1,0.05))



display.solution <- function(idx){
  png(paste((paste("snps04",idx, sep="")),".png", sep=""), width=10000, height=10000, units="px", pointsize=24)
  heatmap.2(solution$U[[idx]], col = hmcols, labRow = rownames(trait.matrix), labCol = colnames(trait.matrix), ColSideCol = cols[ty],
          main = paste0("Convex Biclustering of Phenotypes according to shared eGenes gamma = ", round(gammaSeq[idx], 2)), trace="none", margins=c(40,30),
          keysize = 0.2, density.info = "none", key.xlab = "Proportion of shared eGenes",# key.par = list(mar=c(3,3,3,3)),
          lmat=rbind(c(0,4), c(0, 1), c(3,2), c(0,5)), lwid=c(0.1,1), lhei=c(0.1,0.01,1,0.05))
  dev.off()
}


#display.solution(ix)

#End of Convex Biclustering

